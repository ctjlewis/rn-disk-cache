"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("path");function t(e){return e&&"object"==typeof e&&"default"in e?e:{"default":e}}var a=t(require("react-native-fs"));const{DocumentDirectoryPath:c,mkdir:s,readDir:i,readFile:r,unlink:n,writeFile:o}=a.default,h=e.join(c,"__caches__");class l{name;cachePath;constructor(t){this.name=t,this.cachePath=e.join(h,this.name)}getCaches=async()=>(await s(this.cachePath),(await i(this.cachePath)).sort(((e,t)=>Number(t.name)-Number(e.name))));log(...e){return console.log(`CACHE [${this.name}]`,...e),this}getMostRecentCache=async()=>(await this.getCaches())[0];read=async()=>{this.log("Reading most recent cache value.");try{const e=await this.getMostRecentCache();this.log(e.path);const t=await r(e.path);return JSON.parse(t)}catch(e){this.log("Error reading file",e)}};write=async t=>{this.log("Writing new cache value.");const a=e.join(this.cachePath,`${Date.now()}`);await this.deleteCaches(!1);const c=JSON.stringify(t);return await o(a,c),t};deleteCaches=async e=>{this.log(`Deleting ${e?"all":"old"} caches.`);const t=await this.getCaches(),a=e?t:t.slice(1);await Promise.all(a.map((async e=>await n(e.path))))}}exports.fromDiskCache=async(e,t,a=3600,...c)=>{const s=Date.now(),i=new l(e),r=async()=>{const e=await t(...c);return await i.write(e)};try{const t=await i.getMostRecentCache(),c=t?Number(t.name):0;if(!t)return i.log("No caches found."),await r();const n=(Date.now()-c)/1e3,o=n>=a;return i.log(`Caches found for store: ${e}`,{cacheIsStale:o,secondsOld:n}),o?(i.log("Cache is stale."),await r()):(i.log("Cache is not stale."),await i.read())}catch(e){throw i.log("Unrecoverable error. Files may be corrupted. Deleting all caches.",e),await i.deleteCaches(!0),new Error(`Error: ${e}`)}finally{i.log(`Finished in ${Date.now()-s}ms`)}};
//# sourceMappingURL=rn-disk-cache.production.min.cjs.map
