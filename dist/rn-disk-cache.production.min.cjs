"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("path");function a(e){return e&&"object"==typeof e&&"default"in e?e:{"default":e}}var t=a(require("react-native-fs"));const{DocumentDirectoryPath:c,mkdir:s,readDir:i,readFile:n,unlink:r,writeFile:o}=t.default,h=e.join(c,"__caches__");class l{name;cachePath;constructor(a){this.name=a,this.cachePath=e.join(h,this.name)}log(...e){return console.log(`CACHE [${this.name}]`,...e),this}deleteCaches=async e=>{this.log(`Deleting ${e?"all":"old"} caches.`);const a=await this.getCaches(),t=e?a:a.slice(1);return await Promise.all(t.map((async e=>await r(e.path)))),this};getCaches=async()=>(await s(this.cachePath),(await i(this.cachePath)).sort(((e,a)=>Number(a.name)-Number(e.name))));getMostRecentCache=async()=>(await this.getCaches())[0];read=async()=>{this.log("Reading most recent cache value.");const e=await this.getMostRecentCache(),a=await n(e.path);return JSON.parse(a)};write=async a=>{this.log("Writing new cache value.");const t=e.join(this.cachePath,`${Date.now()}`);await this.deleteCaches(!1);const c=JSON.stringify(a);return await o(t,c),a}}exports.fromDiskCache=async(e,a,t=3600,...c)=>{const s=Date.now(),i=new l(e),n=async()=>{const e=await a(...c);return await i.write(e)};try{const e=await i.getMostRecentCache(),a=e?Number(e.name):0;if(!e)return i.log("No caches found."),await n();const c=(Date.now()-a)/1e3,r=c>=t;return i.log(`Cache found. Age: ${c}s`),r?(i.log("Cache is stale."),await n()):(i.log("Cache is not stale."),await i.read())}catch(e){throw i.log("Unrecoverable error. Files may be corrupted. Deleting all caches.",e),await i.deleteCaches(!0),new Error(`Error: ${e}`)}finally{i.log(`Finished in ${Date.now()-s}ms`)}};
//# sourceMappingURL=rn-disk-cache.production.min.cjs.map
