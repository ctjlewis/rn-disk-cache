"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("path");function t(e){return e&&"object"==typeof e&&"default"in e?e:{"default":e}}var o=t(require("react-native-fs"));const{DocumentDirectoryPath:a,mkdir:n,readDir:c,readFile:s,unlink:r,writeFile:i}=o.default,l=e.join(a,"__caches__");exports.fromDiskCache=async(t,o,a=3600)=>{const u=e.join(l,t);await n(u);const f=await c(u),h=f.sort()[f.length-1],g=h?Number(h.name):0,d=async()=>{console.log("Writing new cache value.");const t=await o(),a=Date.now(),n=e.join(u,`${a}`),c=JSON.stringify(t);console.log("Deleting existing caches.");for(const e of f)r(e.path);return await i(n,c),t};if(!f.length)return console.log("No caches found."),await d();const w=(Date.now()-g)/1e3,m=w>=a;return console.log(`Caches found for store: ${t}`,{cacheIsStale:m,secondsOld:w}),m?(console.log("Cache is stale."),await d()):(console.log("Cache is not stale."),await(async()=>{console.log("Reading most recent cache value.");const t=e.join(u,h.name);return JSON.parse(await s(t))})())};
//# sourceMappingURL=rn-disk-cache.production.min.cjs.map
