import{join as e}from"path";import a from"react-native-fs";const{DocumentDirectoryPath:o,mkdir:t,readDir:n,readFile:c,unlink:s,writeFile:i}=a,r=e(o,"__caches__"),l=async(a,o,l=3600)=>{const m=e(r,a);await t(m);const h=(await n(m)).sort(((e,a)=>Number(a.name)-Number(e.name))),w=h[0],g=w?Number(w.name):0,u=async()=>{console.log("Writing new cache value.");const a=await o(),t=Date.now(),n=e(m,`${t}`),c=JSON.stringify(a);if(h.length>1){console.log("Deleting old caches.");const e=h.slice(1);await Promise.all(e.map((async e=>await s(e.path))))}return await i(n,c),a};if(!h.length)return console.log("No caches found."),await u();const d=(Date.now()-g)/1e3,f=d>=l;return console.log(`Caches found for store: ${a}`,{cacheIsStale:f,secondsOld:d}),f?(console.log("Cache is stale."),await u()):(console.log("Cache is not stale."),await(async()=>{console.log("Reading most recent cache value.");const a=e(m,w.name);return JSON.parse(await c(a))})())};export{l as fromDiskCache};
export default {};
//# sourceMappingURL=rn-disk-cache.min.mjs.map
