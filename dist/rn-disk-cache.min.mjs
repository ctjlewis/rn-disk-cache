import{join as e}from"path";import a from"react-native-fs";const{DocumentDirectoryPath:o,mkdir:t,readDir:n,readFile:c,unlink:s,writeFile:i}=a,r=e(o,"__caches__"),l=async(a,o,l=3600)=>{const m=e(r,a);await t(m);const w=(await n(m)).sort(((e,a)=>Number(a.name)-Number(e.name))),h=w[0],g=h?Number(h.name):0,u=async()=>{console.log("Writing new cache value.");const a=Date.now(),t=e(m,`${a}`);if(await i(t,""),w.length>1){console.log("Deleting old caches.");const e=w.slice(1);await Promise.all(e.map((async e=>await s(e.path))))}const n=await o(),c=JSON.stringify(n);return await i(t,c),n};if(!w.length)return console.log("No caches found."),await u();const d=(Date.now()-g)/1e3,f=d>=l;return console.log(`Caches found for store: ${a}`,{cacheIsStale:f,secondsOld:d}),f?(console.log("Cache is stale."),await u()):(console.log("Cache is not stale."),await(async()=>{console.log("Reading most recent cache value.");const a=e(m,h.name);return JSON.parse(await c(a))})())};export{l as fromDiskCache};
export default {};
//# sourceMappingURL=rn-disk-cache.min.mjs.map
