import{join as e}from"path";import a from"react-native-fs";const{DocumentDirectoryPath:o,mkdir:t,readDir:n,readFile:c,unlink:s,writeFile:l}=a,i=e(o,"__caches__"),r=async(a,o,r=3600)=>{const m=e(i,a);await t(m);const g=(await n(m)).sort(((e,a)=>Number(a.name)-Number(e.name))),h=g[0],w=h?Number(h.name):0,u=async()=>{console.log("Writing new cache value.");const a=await o(),t=Date.now(),n=e(m,`${t}`),c=JSON.stringify(a);if(console.log("LENGTH",g.length),g.length>1){console.log("Deleting old caches.");const e=g.slice(1);await Promise.all(e.map((async e=>await s(e.path))))}return await l(n,c),a};if(!g.length)return console.log("No caches found."),await u();const d=(Date.now()-w)/1e3,f=d>=r;return console.log(`Caches found for store: ${a}`,{cacheIsStale:f,secondsOld:d}),f?(console.log("Cache is stale."),await u()):(console.log("Cache is not stale."),await(async()=>{console.log("Reading most recent cache value.");const a=e(m,h.name);return JSON.parse(await c(a))})())};export{r as fromDiskCache};
export default {};
//# sourceMappingURL=rn-disk-cache.min.mjs.map
